//
//  HNCFHeadBrandView.m
//  HNCF
//
//  Created by Apple on 15/11/18.
//  Copyright © 2015年 hsy. All rights reserved.
//

#import "HNCFHeadBrandView.h"
#import "HNCFCommmon.h"

@interface HNCFHeadBrandView ()
<iCarouselDataSource,
iCarouselDelegate>

@property (nonatomic, strong) iCarousel *carousel;
@property (nonatomic, strong) UIPageControl *pageControl;
@property (nonatomic, strong) UILabel *titleLabel;
@property (nonatomic, strong) NSArray *bannerData;
@property (nonatomic, strong) UILabel *line;
@property (nonatomic, strong) NSString  *who;

@property (nonatomic, strong) NSTimer *bannerTimer;
@end
@implementation HNCFHeadBrandView

- (iCarousel *)carousel {
    if (!_carousel) {
        _carousel = [[iCarousel alloc] initWithFrame:CGRectMake(0, 0, self.width, self.height)];
        _carousel.delegate = self;
        _carousel.dataSource = self;
        _carousel.pagingEnabled = YES;
    }
    return _carousel;
}

- (UIPageControl *)pageControl {
    if (!_pageControl) {
        _pageControl = [[UIPageControl alloc] initWithFrame:CGRectMake(0, 0, 40, 20)];
        _pageControl.centerX = self.width/2;
        _pageControl.y = self.height - _pageControl.height+3;
        _pageControl.numberOfPages = 0;
        _pageControl.currentPageIndicatorTintColor = [UIColor whiteColor];
        _pageControl.pageIndicatorTintColor = [UIColor redColor];
        
    }
    return _pageControl;
}

- (UILabel *)titleLabel {
    if (!_titleLabel) {
        _titleLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, self.width, 40)];
        _titleLabel.backgroundColor = [UIColor clearColor];
        _titleLabel.textAlignment = NSTextAlignmentCenter;
    }
    return _titleLabel;
}
- (UILabel *)line
{
    if (!_line) {
        _line = [[UILabel alloc]initWithFrame:CGRectMake(0, self.pageControl.maxY+1, [UIScreen mainScreen].bounds.size.width, 0.5)];
        _line.backgroundColor = [UIColor lightGrayColor];
        
    }
    return _line;
}

- (instancetype)initWithFrame:(CGRect)frame {
    if (self=[super initWithFrame:frame]) {
        [self addSubview:self.carousel];
        [self addSubview:self.pageControl];
        [self addSubview:self.titleLabel];
        [self addSubview:self.line];
        
        self.bannerTimer = [NSTimer scheduledTimerWithTimeInterval:3.0f target:self selector:@selector(timerFired) userInfo:nil repeats:YES];
    }
    return self;
}

- (void)timerFired {
    if (!self.bannerData || [self.bannerData count] < 2) {
        return;
    }
    
    NSInteger nextIndex = self.carousel.currentItemIndex + 1;
    if (nextIndex >= [self.bannerData count]) {
        nextIndex = 0;
    }
    
    [self.carousel scrollToItemAtIndex:nextIndex animated:YES];
}

- (void)setHomeBannerData:(id)bannerData isWho:(NSString *)who{
    self.who = who;
    self.bannerData = bannerData;
    self.pageControl.numberOfPages = [self.bannerData count];
    [self.carousel reloadData];
}

#pragma mark - iCarouselDataSource
- (NSInteger)numberOfItemsInCarousel:(iCarousel *)carousel {
    return [self.bannerData count];
}

- (UIView *)carousel:(iCarousel *)carousel viewForItemAtIndex:(NSInteger)index reusingView:(UIView *)view {
    if (!view) {
        view = [[UIImageView alloc] initWithFrame:self.carousel.bounds];

    }
    view.contentMode = UIViewContentModeScaleAspectFill;
//    UIImageView *image = (UIImageView *)view;
//    image.image = [UIImage imageNamed:@"head.png"];
    if ([self.who isEqualToString:@"0"]) {
        NSDictionary *itemData = [self.bannerData objectAtIndex:index];

       [(UIImageView *)view sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@",[itemData objectForKey:@"content"]]]];
    }else{
    [(UIImageView *)view sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@%@",HNCF_IMAGE_URL,[self.bannerData objectAtIndex:index]]]];
        NSLog(@"url::%@",[NSString stringWithFormat:@"%@%@",HNCF_IMAGE_URL,[self.bannerData objectAtIndex:index]]);
    }

    return view;
}

#pragma mark - iCarouselDelegate
- (void)carousel:(iCarousel *)carousel didSelectItemAtIndex:(NSInteger)index {
    NSDictionary *itemData = [self.bannerData objectAtIndex:index];
    if (self.delegate && [self.delegate respondsToSelector:@selector(HNCFHeadBrandView:didSelectItem:Index:)]) {
        [self.delegate HNCFHeadBrandView:self didSelectItem:itemData Index:index];
    }
}

- (void)carouselCurrentItemIndexDidChange:(iCarousel *)carousel {
    self.pageControl.currentPage = carousel.currentItemIndex;
}

- (CGFloat)carousel:(iCarousel *)carousel valueForOption:(iCarouselOption)option withDefault:(CGFloat)value {
    switch (option) {
        case iCarouselOptionWrap:
            value = 1;
            break;
            
        default:
            break;
    }
    
    return value;
}
@end
